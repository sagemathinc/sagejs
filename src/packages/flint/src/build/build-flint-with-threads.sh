#!/usr/bin/env bash
set -ev
cd $BUILD

### Now build FLINT

curl http://www.flintlib.org/flint-$FLINT_VERSION.tar.gz -o flint-$FLINT_VERSION.tar.gz
tar xf flint-$FLINT_VERSION.tar.gz
rm flint-$FLINT_VERSION.tar.gz
cd flint-$FLINT_VERSION

# - disabled-shared: shared is not used for WASM.
# - disable-pthread: threading support for WASM is pretty limited still.
emconfigure ./configure \
    --with-mpir="$PACKAGES"/mpir/dist/local/  \
    --with-mpfr="$PACKAGES"/mpfr/dist/local/  \
    --with-gmp="$PACKAGES"/gmp/dist/local/    \
    --with-ntl="$PACKAGES"/ntl/dist/local/    \
    --disable-shared \
    --enable-pthread \
    --prefix=$PREFIX

# - Very parallel since flint has like 10K tiny files (generated by some template system),
#   so most of the time is just starting emscript Python which then calls clang.
# - I'm explicitly setting CFLAGS and CXXFLAGS just to get the -pthread option in there.
#   The other options are just copied from the Makefile.
#   I did enable-pthread and pthread does get linked in; however, for some reason
#   the -pthread flag isn't included by FLINT so we include it explicitly.
emmake make CFLAGS="-pthread -ansi -pedantic -Wall -O2 -funroll-loops -g -mpopcnt"  CXXFLAGS="-pthread -pedantic -Wall -O2 -funroll-loops -g -mpopcnt" -j12

emmake make CFLAGS="-pthread -ansi -pedantic -Wall -O2 -funroll-loops -g -mpopcnt"  CXXFLAGS="-pthread -pedantic -Wall -O2 -funroll-loops -g -mpopcnt" install

